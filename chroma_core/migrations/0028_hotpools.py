# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-09-11 16:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("chroma_core", "0027_add_scan_mdt_jobs"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConfigureHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="ConfigureLamigoJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="ConfigureLpurgeJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="DeployHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="HotpoolConfiguration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("state_modified_at", models.DateTimeField()),
                ("state", models.CharField(max_length=32)),
                ("immutable_state", models.BooleanField(default=False)),
                (
                    "ha_label",
                    models.CharField(
                        help_text=b"Single resource that will controll entire hotpool configuration",
                        max_length=64,
                    ),
                ),
                ("version", models.PositiveSmallIntegerField(default=2)),
                ("not_deleted", models.NullBooleanField(default=True)),
                (
                    "filesystem",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.ManagedFilesystem"),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Lamigo",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("state_modified_at", models.DateTimeField()),
                ("state", models.CharField(max_length=32)),
                ("immutable_state", models.BooleanField(default=False)),
                (
                    "changelog_user",
                    models.CharField(help_text=b"Name of changelog user for MDT", max_length=8, null=True),
                ),
                ("not_deleted", models.NullBooleanField(default=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="LamigoConfiguration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("minage", models.IntegerField(help_text=b"Seconds to wait after close to sync to cold pool")),
                ("not_deleted", models.NullBooleanField(default=True)),
                (
                    "cold",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="cold", to="chroma_core.OstPool"
                    ),
                ),
                (
                    "extend",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extend",
                        to="chroma_core.Task",
                    ),
                ),
                (
                    "hot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="hot", to="chroma_core.OstPool"
                    ),
                ),
                (
                    "hotpool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
                (
                    "resync",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resync",
                        to="chroma_core.Task",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Lpurge",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("state_modified_at", models.DateTimeField()),
                ("state", models.CharField(max_length=32)),
                ("immutable_state", models.BooleanField(default=False)),
                ("not_deleted", models.NullBooleanField(default=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="LpurgeConfiguration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "freehi",
                    models.PositiveSmallIntegerField(help_text=b"Percent of free space which causes purge to stop"),
                ),
                (
                    "freelo",
                    models.PositiveSmallIntegerField(help_text=b"Percent of free space which causes purge to start"),
                ),
                ("not_deleted", models.NullBooleanField(default=True)),
                ("cold", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.OstPool")),
                (
                    "hotpool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
                (
                    "purge",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Task"),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="RemoveConfiguredHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                (
                    "hotpool_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                (
                    "hotpool_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveLamigoJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                ("lamigo", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lamigo")),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveLpurgeJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                ("lpurge", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lpurge")),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveUnconfiguredHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                (
                    "hotpool_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveUnconfiguredLamigoJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                ("lamigo", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lamigo")),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="RemoveUnconfiguredLpurgeJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                ("lpurge", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lpurge")),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="StartHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                (
                    "hotpool_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.CreateModel(
            name="StopHotpoolJob",
            fields=[
                (
                    "job_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="chroma_core.Job",
                    ),
                ),
                ("old_state", models.CharField(max_length=32)),
                (
                    "hotpool_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("chroma_core.job",),
        ),
        migrations.AddField(
            model_name="lpurge",
            name="configuration",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.LpurgeConfiguration"),
        ),
        migrations.AddField(
            model_name="lpurge",
            name="ost",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.ManagedOst"),
        ),
        migrations.AddField(
            model_name="lamigo",
            name="configuration",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.LamigoConfiguration"),
        ),
        migrations.AddField(
            model_name="lamigo",
            name="mdt",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.ManagedMdt"),
        ),
        migrations.AddField(
            model_name="deployhotpooljob",
            name="hotpool_configuration",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"),
        ),
        migrations.AddField(
            model_name="configurelpurgejob",
            name="lpurge",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lpurge"),
        ),
        migrations.AddField(
            model_name="configurelamigojob",
            name="lamigo",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.Lamigo"),
        ),
        migrations.AddField(
            model_name="configurehotpooljob",
            name="hotpool_configuration",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="chroma_core.HotpoolConfiguration"),
        ),
        migrations.AlterUniqueTogether(
            name="hotpoolconfiguration",
            unique_together=set([("filesystem", "not_deleted")]),
        ),
    ]
