# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-06-03 01:09
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("chroma_core", "0016_task"),
    ]

    operations = [
        migrations.CreateModel(
            name="SfaController",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("enclosure_index", models.PositiveIntegerField()),
                ("health_state", models.PositiveSmallIntegerField()),
                ("health_state_reason", models.TextField()),
                ("child_health_state", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SfaDiskDrive",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("enclosure_index", models.PositiveIntegerField()),
                ("failed", models.BooleanField()),
                ("slot_number", models.PositiveIntegerField()),
                ("health_state", models.PositiveSmallIntegerField()),
                ("health_state_reason", models.TextField()),
                ("member_index", models.PositiveSmallIntegerField(null=True)),
                ("member_state", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SFADiskSlot",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("enclosure_index", models.PositiveIntegerField()),
                ("disk_drive_index", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SfaEnclosure",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("element_name", models.TextField()),
                ("health_state", models.PositiveSmallIntegerField()),
                ("health_state_reason", models.TextField()),
                ("child_health_state", models.PositiveSmallIntegerField()),
                ("model", models.TextField()),
                ("position", models.PositiveSmallIntegerField()),
                ("enclosure_type", models.PositiveSmallIntegerField()),
                ("canister_location", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SfaJob",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("sub_target_index", models.PositiveIntegerField(null=True)),
                ("sub_target_type", models.PositiveSmallIntegerField(null=True)),
                ("job_type", models.PositiveSmallIntegerField()),
                ("state", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SfaPowerSupply",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("index", models.PositiveIntegerField()),
                ("enclosure_index", models.PositiveIntegerField()),
                ("health_state", models.PositiveSmallIntegerField()),
                ("health_state_reason", models.TextField()),
                ("position", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SfaStorageSystem",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.TextField(unique=True)),
                ("platform", models.TextField()),
                ("health_state_reason", models.TextField()),
                ("health_state", models.PositiveSmallIntegerField()),
                ("child_health_state", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.AddField(
            model_name="sfapowersupply",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AddField(
            model_name="sfajob",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AddField(
            model_name="sfaenclosure",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AddField(
            model_name="sfadiskslot",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AddField(
            model_name="sfadiskdrive",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AddField(
            model_name="sfacontroller",
            name="storage_system",
            field=models.ForeignKey(
                db_column=b"storage_system",
                on_delete=django.db.models.deletion.CASCADE,
                to="chroma_core.SfaStorageSystem",
                to_field=b"uuid",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="sfapowersupply",
            unique_together=set([("index", "storage_system", "enclosure_index")]),
        ),
        migrations.AlterUniqueTogether(
            name="sfajob",
            unique_together=set([("index", "storage_system")]),
        ),
        migrations.AlterUniqueTogether(
            name="sfaenclosure",
            unique_together=set([("index", "storage_system")]),
        ),
        migrations.AlterUniqueTogether(
            name="sfadiskslot",
            unique_together=set([("enclosure_index", "disk_drive_index", "storage_system")]),
        ),
        migrations.AlterUniqueTogether(
            name="sfadiskdrive",
            unique_together=set([("index", "storage_system")]),
        ),
        migrations.AlterUniqueTogether(
            name="sfacontroller",
            unique_together=set([("index", "storage_system")]),
        ),
    ]
