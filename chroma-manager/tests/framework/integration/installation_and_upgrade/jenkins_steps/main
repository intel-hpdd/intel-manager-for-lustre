#!/bin/bash -ex

. chroma-manager/tests/framework/utils/defaults.sh
. chroma-manager/tests/framework/utils/selective_auto_pass.sh

set_defaults true
check_for_autopass

export CLUSTER_CONFIG_TEMPLATE=${CLUSTER_CONFIG_TEMPLATE:-"$CHROMA_DIR/chroma-manager/tests/framework/integration/shared_storage_configuration/full_cluster/shared_storage_configuration_cluster_cfg.json"}
CURRENT_IEEL_VERSION=$(make -f include/Makefile.version .ieel_version 2>/dev/null) || true
SLAVE=${slave:?"Need to set slave"}

cd $WORKSPACE
curl -f -k -o $SHORT_ARCHIVE_NAME-$CURRENT_IEEL_VERSION-current.tar.gz "$JOB_URL/$SHORT_ARCHIVE_NAME-$CURRENT_IEEL_VERSION.tar.gz"

# Gather logs from nodes and release the cluster at exit
trap "set +e
python \"$CHROMA_DIR\"/chroma-manager/tests/integration/utils/chroma_log_collector.py \"$WORKSPACE/test_logs\" $CLUSTER_CONFIG || true
\"$CHROMA_DIR\"/chroma-manager/tests/framework/utils/provisioner_interface/release_cluster" EXIT

$CHROMA_DIR/chroma-manager/tests/framework/utils/provisioner_interface/provision_cluster

eval $(python $CHROMA_DIR/chroma-manager/tests/utils/json_cfg2sh.py "$CLUSTER_CONFIG")

# we can't currently upgrade a CentOS 7.3 node to RHEL 7.4 so just NOOP
# out if that's the case we are testing
# pity we have to wait for a provisioning to complete to bail out here
if [ "$TEST_DISTRO_NAME" = "el" -a                  \
     $(ssh root@$TEST_RUNNER "lsb_release -i -s") = \
     CentOS ]; then
    fake_test_pass "tests_skipped_because_RHEL_cant_upgrade_CentOS" "$WORKSPACE/test_reports/" ${BUILD_NUMBER}
    exit 0
fi

# see if this mitigates the near constant failure to complete a yum upgrade from the RH CDN
pdsh -l root -R ssh -S -w $(spacelist_to_commalist ${STORAGE_APPLIANCES[@]} ${WORKERS[@]}) "exec 2>&1; set -xe
cat <<\"EOF\" >> /etc/yum.conf
retries=100
timeout=300
EOF" | dshbak -c

RHEL=false
if [[ $slave =~ rhel[0-9]+&&.* ]]; then
    RHEL=true
fi
export RHEL

echo "Beginning automated test run..."
$CHROMA_DIR/chroma-manager/tests/framework/integration/installation_and_upgrade/cluster_setup
$CHROMA_DIR/chroma-manager/tests/framework/integration/installation_and_upgrade/run_tests
echo "Automated test run complete."
