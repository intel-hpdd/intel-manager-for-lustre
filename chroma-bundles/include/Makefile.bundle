REPO         := $(patsubst %/,%,$(REPO))
ret          := $(shell python ../include/find_deps.py "$(REPO)" "$(RPMS)" "$(EXCLUDES)" 2>/dev/null; echo "rc=$$?")
.SHELLSTATUS := $(subst rc=,,$(lastword $(ret)))
BUNDLE_RPMS  := $(filter-out rc=%,$(ret))
ifneq ($(.SHELLSTATUS), 0)
  foo := $(shell for p in "$(BUNDLE_RPMS)"; do echo "whatrequires $$p:"; repoquery --repofrompath=myrepo,$(REPO) --disablerepo="*" --enablerepo=myrepo -q --whatrequires $$p; echo "whatprovides $$p:"; repoquery --repofrompath=myrepo,$(REPO) --disablerepo="*" --enablerepo=myrepo -q --whatprovides $$p; done)
  $(warning $(foo))
  $(error Missing dependencies: $(BUNDLE_RPMS))
endif
VERSION     ?= 0.0.0
NAME        ?= $(notdir $(CURDIR))
BUNDLE_NAME ?= $(NAME)-$(VERSION)-bundle
DISTRO      := $(shell rpm --eval %dist | sed -e 's/\.\(el[0-9][0-9]*\).*/\1/')

all: clean repo $(BUNDLE_NAME).tar.gz install

$(BUNDLE_NAME).tar.gz: $(patsubst %,repo/%.rpm,$(BUNDLE_RPMS)) $(patsubst %,repo/%,$(OTHER))
	rm -f *.tar.gz
	cd repo && createrepo --pretty .
	echo "{\"name\": \"$(NAME)\", \"distro\": \"$(DISTRO)\", \"version\": \"$(VERSION)\", \"description\": \"$(DESC)\"}" > repo/meta
	tar -C repo -czvf $@ ./meta ./repodata $(patsubst repo/%,./%,$^)

repo:
	mkdir repo

repo/%.rpm: $(REPO)/%.rpm repo Makefile ../include/Makefile.bundle
	rm -f $@
	ln $< $@
	touch $@

$(TOP)/../artifacts/$(BUNDLE_NAME).tar.gz: $(BUNDLE_NAME).tar.gz
	mkdir -p $(TOP)/../artifacts
	rm -f $@
	ln $^ $@

install: $(TOP)/../artifacts/$(BUNDLE_NAME).tar.gz

clean:
	rm -rf repo $(BUNDLE_NAME).tar.gz

list:
	@echo "$(BUNDLE_RPMS)" | tr ' ' '\n'

name:
	@echo "$(NAME)"
