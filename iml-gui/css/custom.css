/* ====== ====== ANIMATIONS ====== ====== */

.fade-in {
  animation: fade-in 500ms linear 200ms both;
}

.rotate {
  animation: rotate-center 1s linear infinite both;
}

/* ----------------------------------------------
 * Generated by Animista on 2019-9-6 16:20:47
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info.
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation fade-in
 * ----------------------------------------
 */
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* ----------------------------------------------
 * Generated by Animista on 2019-9-6 17:48:36
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info.
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation rotate-center
 * ----------------------------------------
 */
@keyframes rotate-center {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

.rtl {
  direction: rtl;
}

/*
 * This is standard conformant and default in Firefox, but not in Chrome.
 * Set it explicitly to mitigate possible difference.
 */
li {
  unicode-bidi: isolate;
}

/* Placeholders until https://github.com/tailwindcss/tailwindcss/issues/1354 is fixed */

.justify-self-start {
  justify-self: start;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-end {
  justify-self: end;
}

/* Toggle Component */

input[type="checkbox"].toggle {
  transition-duration: 300ms;
  transition-property: border-color, color;
  transition-timing-function: ease;
}

input[type="checkbox"].toggle::after {
  background-color: currentcolor;
  border-radius: 10px;
  content: "";
  display: block;
  transform: translateX(0);
  transition: transform 300ms ease;
  width: 50%;
  height: 100%;
}

input[type="checkbox"].toggle:checked::after {
  transform: translateX(100%);
}

.spin {
  animation: spin 2s linear infinite;
}

.pulse {
  animation: spin 1s steps(8) infinite;
}

@-webkit-keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}
