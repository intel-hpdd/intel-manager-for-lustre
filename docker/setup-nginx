#!/usr/bin/env python

import os
import re

vars = {
    "SSL_PATH": "/var/lib/chroma",
    "VIEW_SERVER_PROXY_PASS": "http://view-server:8889",
    "HTTP_API_PROXY_PASS": "http://gunicorn:8001",
    "REALTIME_PROXY_PASS": "http://realtime:8888",
    "HTTP_AGENT_PROXY_PASS": "http://http-agent:8002",
    "DEVICE_AGGREGATOR_PORT": "8008",
    "REPO_PATH": "/var/lib/chroma/repo",
    "SRCMAP_REVERSE_PROXY_PASS": "http://srcmap-reverse:8082",
    "DEVICE_AGGREGATOR_PROXY_PASS": "http://device-aggregator:8083",
    "UPDATE_HANDLER_PROXY_PASS": "http://update-handler:8080",
    "WARP_DRIVE_PROXY_PASS": "http://iml-warp-drive:8890",
}

conf_template = "./chroma-manager.conf.template"

with open(conf_template, "r") as f:
    config = f.read()

    config = re.sub(
        r"proxy_pass {{(.+)}}.*;",
        r"set $proxy_upstream {{\g<1>}};\n        proxy_pass $proxy_upstream$uri$is_args$query_string;",
        config,
    )
    config = re.sub(
        r"proxy_read_timeout (.+);",
        r"proxy_read_timeout \g<1>;\n    resolver 127.0.0.11 ipv6=off valid=5s;\n    resolver_timeout 5s;",
        config,
    )
    config = re.sub(
        r"location /iml-device-aggregator {",
        r"location /iml-device-aggregator {\n\n         client_body_buffer_size 1m;\n        client_max_body_size 8m;\n",
        config,
    )

    for (k, v) in vars.iteritems():
        config = config.replace("{{%s}}" % k, v)

    config = re.sub(r"{{(.+)}}", r"{{ .Env.\g<1> }}", config)

    with open("iml.template", "w") as f2:
        f2.write(config)
