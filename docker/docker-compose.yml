version: "3.7"
x-deploy: &default-deploy
  restart_policy:
    condition: on-failure
    delay: 5s
    window: 5s
services:
  postgres:
    image: "postgres:9.2.23"
    hostname: "postgres"
    deploy: *default-deploy
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=chroma
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'postgres' -U 'chroma' -c '\\q'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  influxdb:
    image: "influxdb:1.7.6-alpine"
    hostname: "influxdb"
    deploy: *default-deploy
    volumes:
      - influxdb:/var/lib/influxdb/
    healthcheck:
      test: ["CMD-SHELL", "influx -execute 'quit'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - 8086:8086
  grafana:
    image: "grafana/grafana"
    hostname: "grafana"
    deploy: *default-deploy
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-influx-flux-datasource
    ports:
      - 3000:3000
  rabbit:
    image: "rabbitmq:3.6-management"
    hostname: "rabbit"
    deploy: *default-deploy
    environment:
      - RABBITMQ_DEFAULT_USER=chroma
      - RABBITMQ_DEFAULT_PASS=chroma123
      - RABBITMQ_DEFAULT_VHOST=chromavhost
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit heartbeat 0
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      timeout: 5s
      interval: 5s
      retries: 5
      start_period: 10s
    ports:
      - "15672:15672"
  nginx:
    image: "local/manager-nginx"
    hostname: "nginx"
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
      - "static-config1:/usr/lib/iml-manager"
      - "static-config2:/usr/lib/node_modules/@iml"
    ports:
      - "7443:7443"
  update-handler:
    image: "local/iml-update-check"
    hostname: "update-handler"
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - "IML_CA_PATH=/var/lib/chroma/authority.crt"
  realtime:
    image: "local/realtime"
    hostname: "realtime"
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  view-server:
    image: "local/view-server"
    hostname: "view-server"
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
      - "static-config1:/usr/lib/iml-manager"
      - "static-config2:/usr/lib/node_modules/@iml"
  device-aggregator:
    image: "local/device-aggregator"
    hostname: "device-aggregator"
    deploy: *default-deploy
    environment:
      - AGGREGATOR_PORT=8083
    volumes:
      - "manager-config:/var/lib/chroma"
  corosync:
    image: "local/manager-corosync"
    hostname: "corosync"
    build:
      context: .
      dockerfile: ./corosync.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  gunicorn:
    image: "local/manager-gunicorn"
    hostname: "gunicorn"
    build:
      context: .
      dockerfile: ./gunicorn.dockerfile
    deploy: *default-deploy
    environment:
      - USE_CONSOLE=1
      - PROXY_HOST=gunicorn
    volumes:
      - "manager-config:/var/lib/chroma"
  http-agent:
    image: "local/manager-http-agent"
    volumes:
      - "manager-config:/var/lib/chroma"
    hostname: "http-agent"
    build:
      context: .
      dockerfile: ./http-agent.dockerfile
    deploy: *default-deploy
  job-scheduler:
    image: "local/manager-job-scheduler"
    hostname: "job-scheduler"
    build:
      context: .
      dockerfile: ./job-scheduler.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  lustre-audit:
    image: "local/manager-lustre-audit"
    hostname: "lustre-audit"
    build:
      context: .
      dockerfile: ./lustre-audit.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  plugin-runner:
    image: "local/manager-plugin-runner"
    hostname: "plugin-runner"
    build:
      context: .
      dockerfile: ./plugin-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  power-control:
    image: "local/manager-power-control"
    hostname: "power-control"
    build:
      context: .
      dockerfile: ./power-control.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  stats:
    image: "local/manager-stats"
    hostname: "stats"
    build:
      context: .
      dockerfile: ./stats.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  syslog:
    image: "local/manager-syslog"
    hostname: "syslog"
    build:
      context: .
      dockerfile: ./syslog.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  iml-warp-drive:
    image: "local/iml-warp-drive"
    hostname: "iml-warp-drive"
    build:
      context: ../
      dockerfile: ./docker/iml-warp-drive.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - PROXY_HOST=iml-warp-drive
  iml-action-runner:
    image: "local/iml-action-runner"
    hostname: "iml-action-runner"
    build:
      context: ../
      dockerfile: ./docker/iml-action-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  iml-stratagem:
    image: "local/iml-stratagem"
    hostname: "iml-stratagem"
    build:
      context: ../
      dockerfile: ./docker/iml-action-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
  setup:
    image: "local/manager-setup"
    command: ["tail", "-f", "/dev/null"]
    build:
      context: .
      dockerfile: ./setup.dockerfile
    volumes:
      - "manager-config:/var/lib/chroma"
    secrets:
      - iml_pw
    deploy: *default-deploy
volumes:
  manager-config:
  db-data:
  influxdb:
  grafana-storage:
  static-config1:
  static-config2:
secrets:
  iml_pw:
    external: true
