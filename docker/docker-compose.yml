version: "3.7"
x-logging: &default-logging
  driver: "journald"
x-deploy: &default-deploy
  restart_policy:
    condition: any
    delay: 5s
    window: 5s
services:
  postgres:
    image: "emfteam/postgres:6.3.0"
    build:
      context: ../
      dockerfile: ./docker/postgres.dockerfile
    hostname: "postgres"
    logging: *default-logging
    deploy:
      <<: *default-deploy
      endpoint_mode: dnsrr
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=chroma
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'postgres' -U 'chroma' -c '\\q'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  influxdb:
    image: "emfteam/influxdb:6.3.0"
    build:
      context: ../
      dockerfile: ./docker/influxdb.dockerfile
    hostname: "influxdb"
    logging: *default-logging
    deploy:
      <<: *default-deploy
      resources:
        limits:
          cpus: "2.5"
        reservations:
          cpus: "1.5"
    volumes:
      - influxdb:/var/lib/influxdb/
      - "manager-config:/var/lib/chroma"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail influxdb:8086/ping?wait_for_leader=10s"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_BIND_ADDRESS=influxdb:8088
      - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_HTTP_BIND_ADDRESS=influxdb:8086
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_EMF_STATS_LONG_DURATION
  grafana:
    image: "emfteam/grafana:6.3.0"
    build:
      context: ../
      dockerfile: ./docker/grafana.dockerfile
    hostname: "grafana"
    logging: *default-logging
    deploy: *default-deploy
    environment:
      - GF_SERVER_DOMAIN=grafana
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_PROTOCOL=http
      - "GF_DATABASE_HOST=postgres:5432"
    volumes:
      - "manager-config:/var/lib/chroma"
      - grafana-storage:/var/lib/grafana
    ports:
      - 3000:3000
  rabbit:
    image: "emfteam/rabbitmq:6.3.0"
    build:
      context: ../
      dockerfile: ./docker/rabbitmq.dockerfile
    hostname: "rabbit"
    logging: *default-logging
    deploy:
      <<: *default-deploy
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: "1"
        reservations:
          cpus: "0.5"
    environment:
      - RABBITMQ_DEFAULT_USER=chroma
      - RABBITMQ_DEFAULT_PASS=chroma123
      - RABBITMQ_DEFAULT_VHOST=chromavhost
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit heartbeat 0
      - RABBITMQ_ERLANG_COOKIE='lustre-secret'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://chroma:chroma123@rabbit:15672/api/aliveness-test/chromavhost/",
        ]
      timeout: 5s
      interval: 30s
      retries: 5
      start_period: 30s
  nginx:
    image: "emfteam/manager-nginx:6.3.0"
    build:
      context: ../
      dockerfile: ./docker/nginx.dockerfile
    hostname: "nginx"
    logging: *default-logging
    deploy: *default-deploy
    volumes:
      - "/etc/emf-docker/setup/branding:/var/lib/chroma/branding"
      - "manager-config:/var/lib/chroma"
      - "report:/var/spool/emf/report"
      - "static-config1:/usr/lib/emf-manager"
      - "static-config2:/usr/lib/node_modules/@iml"
    ports:
      - "7443:7443"
  snapshot:
    image: "emfteam/snapshot:6.3.0"
    hostname: "snapshot"
    build:
      context: ../
      dockerfile: ./docker/emf-snapshot.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    environment:
      - RUST_LOG=info,sqlx::query=warn
    volumes:
      - "manager-config:/var/lib/chroma"
  device:
    image: "emfteam/device:6.3.0"
    hostname: "device"
    build:
      context: ../
      dockerfile: ./docker/emf-device.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    environment:
      - DEVICE_AGGREGATOR_PORT=8008
      - PROXY_HOST=device
      - RUST_LOG=info,sqlx::query=warn
    volumes:
      - "manager-config:/var/lib/chroma"
  emf-corosync:
    image: "emfteam/corosync:6.3.0"
    hostname: "emf-corosync"
    build:
      context: ../
      dockerfile: ./docker/emf-corosync.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    environment:
      - RUST_LOG=info,sqlx::query=warn
    volumes:
      - "manager-config:/var/lib/chroma"
  network:
    image: "emfteam/network:6.3.0"
    hostname: "emf-network"
    build:
      context: ../
      dockerfile: ./docker/emf-network.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
  ntp:
    image: "emfteam/ntp:6.3.0"
    hostname: "emf-ntp"
    build:
      context: ../
      dockerfile: ./docker/emf-ntp.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
  sfa:
    image: "emfteam/sfa:6.3.0"
    hostname: "emf-sfa"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-sfa.dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 5s
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
      - SFA_ENDPOINTS_1
  corosync:
    image: "emfteam/manager-corosync:6.3.0"
    hostname: "corosync"
    logging: *default-logging
    build:
      context: .
      dockerfile: ./corosync.dockerfile
    deploy: *default-deploy
    environment:
      - LOG_LEVEL
    volumes:
      - "manager-config:/var/lib/chroma"
  gunicorn:
    image: "emfteam/manager-gunicorn:6.3.0"
    hostname: "gunicorn"
    logging: *default-logging
    build:
      context: .
      dockerfile: ./gunicorn.dockerfile
    deploy: *default-deploy
    environment:
      - USE_CONSOLE=1
      - PROXY_HOST=gunicorn
      - LOG_LEVEL
    volumes:
      - "manager-config:/var/lib/chroma"
  http-agent:
    image: "emfteam/manager-http-agent:6.3.0"
    volumes:
      - "manager-config:/var/lib/chroma"
    hostname: "http-agent"
    logging: *default-logging
    build:
      context: .
      dockerfile: ./http-agent.dockerfile
    deploy: *default-deploy
    environment:
      - PROXY_HOST=http-agent
      - LOG_LEVEL
  emf-agent-comms:
    image: "emfteam/emf-agent-comms:6.3.0"
    volumes:
      - "manager-config:/var/lib/chroma"
    hostname: "emf-agent-comms"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-agent-comms.dockerfile
    deploy: *default-deploy
    environment:
      - HTTP_AGENT2_PORT=8003
      - PROXY_HOST=emf-agent-comms
      - RUST_LOG=info,emf_agent_comms::api=warn
  job-scheduler:
    image: "emfteam/manager-job-scheduler:6.3.0"
    hostname: "job-scheduler"
    build:
      context: .
      dockerfile: ./job-scheduler.dockerfile
    deploy: *default-deploy
    logging: *default-logging
    volumes:
      - "manager-config:/var/lib/chroma"
      - "report:/var/spool/emf/report"
      - "/root/.ssh:/root/.ssh"
    environment:
      - DEVICE_AGGREGATOR_URL=http://device:8008
      - PROXY_HOST=emf-action-runner
      - LOG_LEVEL
  plugin-runner:
    image: "emfteam/manager-plugin-runner:6.3.0"
    hostname: "plugin-runner"
    logging: *default-logging
    build:
      context: .
      dockerfile: ./plugin-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - DEVICE_AGGREGATOR_URL=http://device:8008
      - LOG_LEVEL
  journal:
    image: "emfteam/journal:6.3.0"
    hostname: "journal"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/journal.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
      - LOG_LEVEL
      - DBLOG_HW
      - DBLOG_LW
  emf-warp-drive:
    image: "emfteam/emf-warp-drive:6.3.0"
    hostname: "emf-warp-drive"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-warp-drive.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - PROXY_HOST=emf-warp-drive
      - RUST_LOG=info,sqlx::query=warn
  emf-action-runner:
    image: "emfteam/emf-action-runner:6.3.0"
    hostname: "emf-action-runner"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-action-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - PROXY_HOST=emf-action-runner
      - ACTION_RUNNER_PORT=8009
      - RUST_LOG=info,sqlx::query=warn
  emf-task-runner:
    image: "emfteam/emf-task-runner:6.3.0"
    hostname: "emf-task-runner"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-task-runner.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
      - PROXY_HOST=emf-action-runner
      - ACTION_RUNNER_PORT=8009
  emf-api:
    image: "emfteam/emf-api:6.3.0"
    hostname: "emf-api"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-api.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
      - "report:/var/spool/emf/report"
    environment:
      - PROXY_HOST=emf-api
      - RUST_LOG=info,sqlx::query=warn
      - BRANDING
      - USE_STRATAGEM
      - USE_SNAPSHOTS
      - EXA_VERSION
      - SFA_ENDPOINTS_1
  emf-ostpool:
    image: "emfteam/emf-ostpool:6.3.0"
    hostname: "emf-ostpool"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-ostpool.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info,sqlx::query=warn
  emf-mailbox:
    image: "emfteam/emf-mailbox:6.3.0"
    hostname: "emf-mailbox"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-mailbox.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - PROXY_HOST=emf-mailbox
      - RUST_LOG=info,sqlx::query=warn
  emf-report:
    image: "emfteam/emf-report:6.3.0"
    hostname: "emf-report"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-report.dockerfile
    deploy: *default-deploy
    environment:
      - RUST_LOG=info
    volumes:
      - "report:/var/spool/emf/report"
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "report_run:/run"
      - "manager-config:/var/lib/chroma"
  emf-stats:
    image: "emfteam/emf-stats:6.3.0"
    hostname: "emf-stats"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-stats.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - RUST_LOG=info
      - "PROXY_HOST=emf-stats"
  emf-postoffice:
    image: "emfteam/emf-postoffice:6.3.0"
    hostname: "emf-postoffice"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-postoffice.dockerfile
    deploy: *default-deploy
    volumes:
      - "manager-config:/var/lib/chroma"
    environment:
      - PROXY_HOST=emf-postoffice
      - RUST_LOG=info
  emf-timer:
    image: "emfteam/emf-timer:6.3.0"
    hostname: "emf-timer"
    logging: *default-logging
    build:
      context: ../
      dockerfile: ./docker/emf-timer.dockerfile
    deploy: *default-deploy
    environment:
      - RUST_LOG=info
      - PROXY_HOST=emf-timer
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "timer_run:/run"
      - "timer_systemd:/var/lib/systemd"
      - "timer_system:/etc/systemd/system"
      - "manager-config:/var/lib/chroma"
  setup:
    image: "emfteam/manager-setup:6.3.0"
    logging: *default-logging
    command: ["tail", "-f", "/dev/null"]
    build:
      context: .
      dockerfile: ./setup.dockerfile
    volumes:
      - "manager-config:/var/lib/chroma"
      - "/etc/emf-docker/setup:/var/lib/chroma-setup"
    secrets:
      - emf_pw
    environment:
      - BRANDING
      - USE_STRATAGEM
      - EXA_VERSION
      - INFLUXDB_EMF_STATS_LONG_DURATION
      - LOG_LEVEL
      - INFLUXDB_SERVER_FQDN=influxdb
      - TIMER_SERVER_FQDN=emf-timer
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 5s
volumes:
  manager-config:
  db-data:
  influxdb:
  grafana-storage:
  static-config1:
  static-config2:
  mailbox_run:
    driver_opts:
      type: tmpfs
      device: tmpfs
  report:
  report_run:
    driver_opts:
      type: tmpfs
      device: tmpfs
  timer_run:
    driver_opts:
      type: tmpfs
      device: tmpfs
  timer_system:
  timer_systemd:
secrets:
  emf_pw:
    external: true
