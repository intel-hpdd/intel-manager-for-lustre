language: python
python: "2.7"
sudo: required
services:
  - docker
  - postgresql
jobs:
  include:
    - stage: test
      name: "Unit Tests"
      install:
        - pip install -r requirements.txt
        - pip install -r requirements.test
      before_script:
        - psql -c "CREATE USER chroma;" -U postgres
        - psql -c "ALTER USER chroma CREATEDB;" -U postgres
        - psql -c "CREATE DATABASE chroma OWNER chroma;" -U postgres
        - psql -c 'CREATE EXTENSION IF NOT EXISTS btree_gist;' -U postgres -d template1
      script:
        - export IML_DISABLE_THREADS=1
        - echo "CRYPTO_FOLDER='./'" > local_settings.py
        - echo -e "/^DEBUG =/s/= .*$/= True/\nwq" | ed settings.py 2>/dev/null
        - python -W always manage.py test tests/unit/
    - stage: test
      name: "Service tests"
      script:
        - docker run -dit --privileged --name systemd --mount type=bind,source="$(pwd)",target=/integrated-manager-for-lustre  -v /sys/fs/cgroup:/sys/fs/cgroup:ro centos/systemd
        - docker exec -i systemd yum -y install make sed systemd-python
        - docker exec -i systemd make -C ./integrated-manager-for-lustre/ substs
        - docker exec -i systemd bash -c "./integrated-manager-for-lustre/tests/framework/services/runner.sh"
    - stage: test
      name: "Format Check"
      python: "3.6"
      install:
        - pip install black
      script:
        - black --check ./
    - stage: test
      name: "copr build test"
      script:
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e LOCAL_ONLY="True" -v $(pwd):/build:rw imlteam/copr
        - ((`find _topdir/RPMS -name *.rpm | wc -l` > 0))
    - stage: cd
      name: "Continuous Deployment"
      script:
        - export OWNER=managerforlustre
        - export PROJECT=manager-for-lustre-devel
        - export PACKAGE=python-iml-manager
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
    - stage: deploy-copr-r5.1
      name: "Copr 5.1 deploy"
      script:
        - export OWNER=managerforlustre
        - export PROJECT=manager-for-lustre-5.1
        - export PACKAGE=python-iml-manager
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e PROD="true" -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
    - stage: deploy-copr-r6.0
      name: "Copr 6.0 deploy"
      script:
        - export OWNER=managerforlustre
        - export PROJECT=manager-for-lustre-6.0
        - export PACKAGE=python-iml-manager
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e PROD="true" -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
    - stage: deploy-copr-r6.1
      name: "Copr 6.1 deploy"
      script:
        - export OWNER=managerforlustre
        - export PROJECT=manager-for-lustre-6.1
        - export PACKAGE=python-iml-manager
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e PROD="true" -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
    - stage: deploy-copr-r6.2
      name: "Copr 6.2 deploy"
      script:
        - export OWNER=managerforlustre
        - export PROJECT=manager-for-lustre-6.2
        - export PACKAGE=python-iml-manager
        - export SPEC=python-iml-manager.spec
        - export SRPM_TASK=iml-srpm
        - docker run -it -e PROD="true" -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e SPEC="$SPEC" -e SRPM_TASK="$SRPM_TASK" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
stages:
  - test
  - name: cd
    if: branch = master AND type = push AND fork = false
  - name: deploy-copr-r5.1
    if: branch =~ ^b5\.1\.\d+-iml$
  - name: deploy-copr-r6.0
    if: branch =~ ^b6\.0\.\d+-iml$
  - name: deploy-copr-r6.1
    if: branch =~ ^r6\.1\.\d+-iml$
  - name: deploy-copr-r6.2
    if: branch =~ ^r6\.2\.\d+-iml$
