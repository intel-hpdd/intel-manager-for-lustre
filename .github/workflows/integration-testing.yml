name: integration-testing
on:
  pull_request:
defaults:
  run:
    shell: bash -eux {0}
jobs:
  gui_rpm_build:
    name: GUI RPM build
    runs-on: ubuntu-latest
    container:
      image: emfteam/emf-centos7-deps
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Build rpm
        run: make RPM_DIST=".$(date '+%s')" emf-gui-rpm

      - name: Archive rpm
        uses: actions/upload-artifact@v2
        with:
          name: gui_rpm
          path: _topdir/RPMS/x86_64
          retention-days: 1
  rust_emf_rpm_build:
    name: Rust EMF RPM build
    runs-on: ubuntu-latest
    container:
      image: emfteam/emf-centos7-deps
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build rpm
        run: make RPM_DIST=".$(date '+%s')" rust-core-rpms

      - name: Archive rpm
        uses: actions/upload-artifact@v2
        with:
          name: rust_rpm
          path: _topdir/RPMS/x86_64
          retention-days: 1
  device_scanner_rpm_build:
    name: Device Scanner RPM build
    runs-on: ubuntu-latest
    container:
      image: emfteam/emf-centos7-deps
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Build rpm
        run: make RPM_DIST=".$(date '+%s')" device-scanner-rpms

      - name: Archive rpm
        uses: actions/upload-artifact@v2
        with:
          name: device_scanner_rpm
          path: _topdir/RPMS/x86_64
          retention-days: 1
  sos_plugin_build:
    name: EMF SOS Plugin
    runs-on: ubuntu-latest
    container:
      image: emfteam/emf-centos7-deps
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build rpm
        run: make RPM_DIST=".$(date '+%s')" sos-rpm

      - name: Archive rpm
        uses: actions/upload-artifact@v2
        with:
          name: sos_rpm
          path: _topdir/RPMS/noarch
          retention-days: 1
  create_emf_repo:
    name: create EMF repo
    runs-on: ubuntu-latest
    needs: [
        device_scanner_rpm_build,
        # gui_rpm_build,
        rust_emf_rpm_build,
        sos_plugin_build,
      ]
    container:
      image: centos:7
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - name: create dir
        run: |
          mkdir -p emf_rpms
          chmod 777 emf_rpms
      - name: Download kuma cp
        uses: dsaltares/fetch-gh-release-asset@e2dbbde846aa9a9d2998a2ce9fa92ab73921c81b
        with:
          repo: "whamcloud/pkg-kuma"
          version: "tags/v1.0.7-1"
          file: "kuma-cp-1.0.7-1.el7.x86_64.rpm"
          target: "emf_rpms/kuma-cp-1.0.7-1.el7.x86_64.rpm"
          token: ${{ secrets.RELESE_DOWNLOAD_PAT }}
      - name: Download kuma dp
        uses: dsaltares/fetch-gh-release-asset@e2dbbde846aa9a9d2998a2ce9fa92ab73921c81b
        with:
          repo: "whamcloud/pkg-kuma"
          version: "tags/v1.0.7-1"
          file: "kuma-dp-1.0.7-1.el7.x86_64.rpm"
          target: "emf_rpms/kuma-dp-1.0.7-1.el7.x86_64.rpm"
          token: ${{ secrets.RELESE_DOWNLOAD_PAT }}
      - name: Download kumactl
        uses: dsaltares/fetch-gh-release-asset@e2dbbde846aa9a9d2998a2ce9fa92ab73921c81b
        with:
          repo: "whamcloud/pkg-kuma"
          version: "tags/v1.0.7-1"
          file: "kuma-ctl-1.0.7-1.el7.x86_64.rpm"
          target: "emf_rpms/kuma-ctl-1.0.7-1.el7.x86_64.rpm"
          token: ${{ secrets.RELESE_DOWNLOAD_PAT }}
      # - name: Download GUI RPMs
      #   uses: actions/download-artifact@v1
      #   with:
      #       name: gui_rpm
      #       path: emf_rpms
      - name: Download Rust RPMs
        uses: actions/download-artifact@v1
        with:
          name: rust_rpm
          path: emf_rpms
      - name: Download Device Scanner RPMs
        uses: actions/download-artifact@v1
        with:
          name: device_scanner_rpm
          path: emf_rpms
      - name: Download sos-plugin RPM
        uses: actions/download-artifact@v1
        with:
          name: sos_rpm
          path: emf_rpms
      - run: |
          yum install -y createrepo yum-utils
          createrepo --pretty emf_rpms
          ls -l
      - name: Archive repo
        uses: actions/upload-artifact@v2
        with:
          name: emf_repo
          path: emf_rpms
          retention-days: 2
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            gui_rpm
            rust_rpm
            device_scanner_rpm
            sos_rpm
  ubuntu_packages:
    name: Build packages for Ubuntu
    runs-on: ubuntu-20.04
    container:
      image: emfteam/emf-ubuntu20.04-deps
      options: --user=0
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build packages
        run: make deb DEB_LOCAL_VERSION=$(date +%s)

      - name: Publish packages
        run: make deb-repo

      - name: Summary
        run: |
          find _deb -ls
          echo
          cat _deb/incoming/*.changes
          for d in _deb/incoming/*.deb; do
            echo
            echo ">>>>>>>>>> $d <<<<<<<<<<"
            dpkg -I "$d"
            dpkg -c "$d"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: apt_repo
          if-no-files-found: error
          path: |
            _deb/repo/dists/
            _deb/repo/pool/

  exa_base_testing:
    name: EXA Testing
    runs-on: self-hosted
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Cleanup old Workspace
        run: sudo rm -rf "${{ github.workspace }}/*"

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup
        run: |
          sudo yum install -y cargo || true
          sudo yum-config-manager --add-repo=http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo
          sudo yum install -y VirtualBox-6.1 || true
          sudo yum install -y https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_x86_64.rpm || true

          sudo VBoxManage setproperty machinefolder /root/VirtualBox\ VMs

          if [[ $(sudo VBoxManage list hostonlyifs | egrep -c 'vboxnet0') -eq 0 ]]; then
            sudo VBoxManage hostonlyif create;
          fi
          sudo VBoxManage hostonlyif ipconfig vboxnet0 --ip 10.73.10.1

      - name: Test
        run: |
          cd es-vagrant
          set -e
          sudo vagrant up
          sudo vagrant provision --provision-with=es-install
          sudo vagrant provision --provision-with=ha-setup,start-lustre
          sudo vagrant provision --provision-with=install-lustre-client,configure-lustre-client-network,mount-lustre-client

      - name: Archive SOS reports
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: sosreport_rpm
          path: "**/vagrant/sosreport_rpm*/*.tar.xz"
          retention-days: 2

      - name: Cleanup
        if: ${{ always() }}
        run: |
          sudo vagrant suspend 2>/dev/null || true
          sudo vagrant destroy -f 2>/dev/null || true
          sudo vagrant global-status --prune 2>/dev/null || true

          sudo vboxmanage list runningvms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} sudo VBoxManage controlvm {} poweroff 2>/dev/null || true
          sudo vboxmanage list vms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} sudo VBoxManage unregistervm {} --delete 2>/dev/null || true
          sudo rm -rf /root/VirtualBox\ VMs/
