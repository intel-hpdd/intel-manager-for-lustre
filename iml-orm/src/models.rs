// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

#[cfg(feature = "postgres-interop")]
use crate::schema::*;
use chrono::offset::Utc;
use chrono::DateTime;
use ipnetwork::IpNetwork;
use serde_json;

#[cfg_attr(
    feature = "postgres-interop",
    derive(Debug, PartialEq, FromSqlRow, AsExpression)
)]
#[derive(serde::Serialize, serde::Deserialize, Clone)]
#[cfg_attr(feature = "postgres-interop", sql_type = "SqlLustreFid")]
pub struct LustreFid {
    pub seq: u64,
    pub oid: u32,
    pub ver: u32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "auth_group")]
pub struct AuthGroup {
    pub id: i32,
    pub name: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "auth_group_permissions")]
pub struct AuthGroupPermission {
    pub id: i32,
    pub group_id: i32,
    pub permission_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "auth_permission")]
pub struct AuthPermission {
    pub id: i32,
    pub name: String,
    pub content_type_id: i32,
    pub codename: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[cfg_attr(feature = "postgres-interop", table_name = "auth_user")]
#[derive(serde::Serialize, serde::Deserialize)]
pub struct AuthUser {
    pub id: i32,
    pub password: String,
    pub last_login: Option<DateTime<Utc>>,
    pub is_superuser: bool,
    pub username: String,
    pub first_name: String,
    pub last_name: String,
    pub email: String,
    pub is_staff: bool,
    pub is_active: bool,
    pub date_joined: DateTime<Utc>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "auth_user_groups")]
pub struct AuthUserGroup {
    pub id: i32,
    pub user_id: i32,
    pub group_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "auth_user_user_permissions"
)]
pub struct AuthUserUserPermission {
    pub id: i32,
    pub user_id: i32,
    pub permission_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_addostpooljob")]
pub struct ChromaCoreAddostpooljob {
    pub job_ptr_id: i32,
    pub ost_id: i32,
    pub pool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_aggregatestratagemresultsjob"
)]
pub struct ChromaCoreAggregatestratagemresultsjob {
    pub job_ptr_id: i32,
    pub fs_name: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_alertemail")]
pub struct ChromaCoreAlertemail {
    pub id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_alertemail_alerts"
)]
pub struct ChromaCoreAlertemailAlert {
    pub id: i32,
    pub alertemail_id: i32,
    pub alertstate_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_alertstate")]
pub struct ChromaCoreAlertstate {
    pub id: i32,
    pub record_type: String,
    pub variant: String,
    pub alert_item_id: Option<i32>,
    pub alert_type: String,
    pub begin: DateTime<Utc>,
    pub end: Option<DateTime<Utc>>,
    pub message: Option<String>,
    pub active: Option<bool>,
    pub dismissed: bool,
    pub severity: i32,
    pub lustre_pid: Option<i32>,
    pub alert_item_type_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_alertsubscription"
)]
pub struct ChromaCoreAlertsubscription {
    pub id: i32,
    pub alert_type_id: i32,
    pub user_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_applyconfparams"
)]
pub struct ChromaCoreApplyconfparam {
    pub job_ptr_id: i32,
    pub mgs_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_autoconfigurecorosync2job"
)]
pub struct ChromaCoreAutoconfigurecorosync2job {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_autoconfigurecorosyncjob"
)]
pub struct ChromaCoreAutoconfigurecorosyncjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_clearoldstratagemdatajob"
)]
pub struct ChromaCoreClearoldstratagemdatajob {
    pub job_ptr_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_clientcertificate"
)]
pub struct ChromaCoreClientcertificate {
    pub id: i32,
    pub serial: String,
    pub revoked: bool,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_command")]
pub struct ChromaCoreCommand {
    pub id: i32,
    pub complete: bool,
    pub errored: bool,
    pub cancelled: bool,
    pub message: String,
    pub created_at: DateTime<Utc>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_command_jobs")]
pub struct ChromaCoreCommandJob {
    pub id: i32,
    pub command_id: i32,
    pub job_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurecopytooljob"
)]
pub struct ChromaCoreConfigurecopytooljob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurecorosync2job"
)]
pub struct ChromaCoreConfigurecorosync2job {
    pub job_ptr_id: i32,
    pub mcast_port: Option<i32>,
    pub corosync_configuration_id: i32,
    pub network_interface_0_id: i32,
    pub network_interface_1_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurecorosyncjob"
)]
pub struct ChromaCoreConfigurecorosyncjob {
    pub job_ptr_id: i32,
    pub mcast_port: Option<i32>,
    pub corosync_configuration_id: i32,
    pub network_interface_0_id: i32,
    pub network_interface_1_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurehostfencingjob"
)]
pub struct ChromaCoreConfigurehostfencingjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurelnetjob"
)]
pub struct ChromaCoreConfigurelnetjob {
    pub job_ptr_id: i32,
    pub config_changes: String,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurentpjob"
)]
pub struct ChromaCoreConfigurentpjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub ntp_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurepacemakerjob"
)]
pub struct ChromaCoreConfigurepacemakerjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub pacemaker_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configurestratagemjob"
)]
pub struct ChromaCoreConfigurestratagemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub stratagem_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_configuretargetjob"
)]
pub struct ChromaCoreConfiguretargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_confparam")]
pub struct ChromaCoreConfparam {
    pub id: i32,
    pub key: String,
    pub value: Option<String>,
    pub version: i32,
    pub content_type_id: Option<i32>,
    pub mgs_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_copytool")]
pub struct ChromaCoreCopytool {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub index: i32,
    pub bin_path: String,
    pub archive: i32,
    pub mountpoint: String,
    pub hsm_arguments: String,
    pub uuid: Option<String>,
    pub pid: Option<i32>,
    pub not_deleted: Option<bool>,
    pub client_mount_id: Option<i32>,
    pub content_type_id: Option<i32>,
    pub filesystem_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_copytooloperation"
)]
pub struct ChromaCoreCopytooloperation {
    pub id: i32,
    pub state: i16,
    pub type_: i16,
    pub started_at: Option<DateTime<Utc>>,
    pub updated_at: Option<DateTime<Utc>>,
    pub finished_at: Option<DateTime<Utc>>,
    pub processed_bytes: Option<i64>,
    pub total_bytes: Option<i64>,
    pub path: Option<String>,
    pub fid: Option<String>,
    pub info: Option<String>,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    primary_key(corosyncconfiguration_ptr_id)
)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_corosync2configuration"
)]
pub struct ChromaCoreCorosync2configuration {
    pub corosyncconfiguration_ptr_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_corosyncconfiguration"
)]
pub struct ChromaCoreCorosyncconfiguration {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub mcast_port: Option<i32>,
    pub corosync_reported_up: bool,
    pub record_type: String,
    pub content_type_id: Option<i32>,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_createostpooljob"
)]
pub struct ChromaCoreCreateostpooljob {
    pub job_ptr_id: i32,
    pub pool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_deployhostjob")]
pub struct ChromaCoreDeployhostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub managed_host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_destroyostpooljob"
)]
pub struct ChromaCoreDestroyostpooljob {
    pub job_ptr_id: i32,
    pub pool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_detecttargetsjob"
)]
pub struct ChromaCoreDetecttargetsjob {
    pub job_ptr_id: i32,
    pub host_ids: String,
}

#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[cfg_attr(feature = "postgres-interop", primary_key(id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_device")]
pub struct ChromaCoreDevice {
    pub id: i32,
    pub fqdn: String,
    pub devices: serde_json::Value,
}

#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", derive(Insertable))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_device")]
pub struct NewChromaCoreDevice {
    pub fqdn: String,
    pub devices: serde_json::Value,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_enablelnetjob")]
pub struct ChromaCoreEnablelnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_object_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_failbacktargetjob"
)]
pub struct ChromaCoreFailbacktargetjob {
    pub job_ptr_id: i32,
    pub target_id: i32,
}

#[cfg_attr(
    feature = "postgres-interop",
    derive(Queryable, Debug, Insertable, Identifiable)
)]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_fidtaskerror")]
pub struct ChromaCoreFidtaskerror {
    pub id: i32,
    pub fid: LustreFid,
    pub data: serde_json::Value,
    pub errno: i16,
    pub task_id: i32,
}

#[cfg_attr(
    feature = "postgres-interop",
    derive(Queryable, Debug, Insertable, Identifiable)
)]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_fidtaskqueue")]
pub struct ChromaCoreFidtaskqueue {
    pub id: i32,
    pub fid: LustreFid,
    pub data: serde_json::Value,
    pub task_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_failovertargetjob"
)]
pub struct ChromaCoreFailovertargetjob {
    pub job_ptr_id: i32,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(confparam_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_filesystemclientconfparam"
)]
pub struct ChromaCoreFilesystemclientconfparam {
    pub confparam_ptr_id: i32,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(confparam_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_filesystemglobalconfparam"
)]
pub struct ChromaCoreFilesystemglobalconfparam {
    pub confparam_ptr_id: i32,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(ticket_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_filesystemticket"
)]
pub struct ChromaCoreFilesystemticket {
    pub ticket_ptr_id: i32,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_forceremovecopytooljob"
)]
pub struct ChromaCoreForceremovecopytooljob {
    pub job_ptr_id: i32,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_forceremovehostjob"
)]
pub struct ChromaCoreForceremovehostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_forgetfilesystemjob"
)]
pub struct ChromaCoreForgetfilesystemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_forgetstratagemconfigurationjob"
)]
pub struct ChromaCoreForgetstratagemconfigurationjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub stratagem_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_forgettargetjob"
)]
pub struct ChromaCoreForgettargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_formattargetjob"
)]
pub struct ChromaCoreFormattargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_getcorosyncstatejob"
)]
pub struct ChromaCoreGetcorosyncstatejob {
    pub job_ptr_id: i32,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_getlnetstatejob"
)]
pub struct ChromaCoreGetlnetstatejob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_getpacemakerstatejob"
)]
pub struct ChromaCoreGetpacemakerstatejob {
    pub job_ptr_id: i32,
    pub pacemaker_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_installhostpackagesjob"
)]
pub struct ChromaCoreInstallhostpackagesjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub managed_host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_job")]
pub struct ChromaCoreJob {
    pub id: i32,
    pub state: String,
    pub errored: bool,
    pub cancelled: bool,
    pub modified_at: DateTime<Utc>,
    pub created_at: DateTime<Utc>,
    pub wait_for_json: String,
    pub locks_json: String,
    pub content_type_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_lnetconfiguration"
)]
pub struct ChromaCoreLnetconfiguration {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_loadlnetjob")]
pub struct ChromaCoreLoadlnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_logmessage")]
pub struct ChromaCoreLogmessage {
    pub id: i32,
    pub datetime: DateTime<Utc>,
    pub fqdn: String,
    pub severity: i16,
    pub facility: i16,
    pub tag: String,
    pub message: String,
    pub message_class: i16,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_lustreclientmount"
)]
pub struct ChromaCoreLustreclientmount {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub mountpoint: Option<String>,
    pub content_type_id: Option<i32>,
    pub filesystem: String,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_makeavailablefilesystemunavailable"
)]
pub struct ChromaCoreMakeavailablefilesystemunavailable {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_managedfilesystem"
)]
pub struct ChromaCoreManagedfilesystem {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub name: String,
    pub mdt_next_index: i32,
    pub ost_next_index: i32,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
    pub mgs_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_managedhost")]
pub struct ChromaCoreManagedhost {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub address: String,
    pub fqdn: String,
    pub nodename: String,
    pub boot_time: Option<DateTime<Utc>>,
    pub needs_update: bool,
    pub corosync_ring0: String,
    pub install_method: String,
    pub content_type_id: Option<i32>,
    pub server_profile_id: Option<String>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_managedhost_ha_cluster_peers"
)]
pub struct ChromaCoreManagedhostHaClusterPeer {
    pub id: i32,
    pub from_managedhost_id: i32,
    pub to_managedhost_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(managedtarget_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_managedmdt")]
pub struct ChromaCoreManagedmdt {
    pub managedtarget_ptr_id: i32,
    pub index: i32,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(managedtarget_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_managedmgs")]
pub struct ChromaCoreManagedmg {
    pub managedtarget_ptr_id: i32,
    pub conf_param_version: i32,
    pub conf_param_version_applied: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(managedtarget_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_managedost")]
pub struct ChromaCoreManagedost {
    pub managedtarget_ptr_id: i32,
    pub index: i32,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_managedtarget")]
pub struct ChromaCoreManagedtarget {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub name: Option<String>,
    pub uuid: Option<String>,
    pub ha_label: Option<String>,
    pub inode_size: Option<i32>,
    pub bytes_per_inode: Option<i32>,
    pub inode_count: Option<i64>,
    pub reformat: bool,
    pub not_deleted: Option<bool>,
    pub active_mount_id: Option<i32>,
    pub content_type_id: Option<i32>,
    pub volume_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_managedtargetmount"
)]
pub struct ChromaCoreManagedtargetmount {
    pub id: i32,
    pub mount_point: Option<String>,
    pub primary: bool,
    pub not_deleted: Option<bool>,
    pub host_id: i32,
    pub target_id: i32,
    pub volume_node_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(ticket_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_masterticket")]
pub struct ChromaCoreMasterticket {
    pub ticket_ptr_id: i32,
    pub mgs_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(confparam_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_mdtconfparam")]
pub struct ChromaCoreMdtconfparam {
    pub confparam_ptr_id: i32,
    pub mdt_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_mountlustreclientjob"
)]
pub struct ChromaCoreMountlustreclientjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lustre_client_mount_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_mountlustrefilesystemsjob"
)]
pub struct ChromaCoreMountlustrefilesystemsjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_networkinterface"
)]
pub struct ChromaCoreNetworkinterface {
    pub id: i32,
    pub name: String,
    pub inet4_address: String,
    pub inet4_prefix: i32,
    pub type_: String,
    pub state_up: bool,
    pub corosync_configuration_id: Option<i32>,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(network_interface_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_nid")]
pub struct ChromaCoreNid {
    pub network_interface_id: i32,
    pub lnd_network: Option<i32>,
    pub lnd_type: Option<String>,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_ntpconfiguration"
)]
pub struct ChromaCoreNtpconfiguration {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(confparam_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_ostconfparam")]
pub struct ChromaCoreOstconfparam {
    pub confparam_ptr_id: i32,
    pub ost_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_ostpool")]
pub struct ChromaCoreOstpool {
    pub id: i32,
    pub name: String,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_ostpool_osts")]
pub struct ChromaCoreOstpoolOst {
    pub id: i32,
    pub ostpool_id: i32,
    pub managedost_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_pacemakerconfiguration"
)]
pub struct ChromaCorePacemakerconfiguration {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_powercontroldevice"
)]
pub struct ChromaCorePowercontroldevice {
    pub id: i32,
    pub not_deleted: Option<bool>,
    pub name: String,
    pub address: IpNetwork,
    pub port: i32,
    pub username: String,
    pub password: String,
    pub options: Option<String>,
    pub device_type_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_powercontroldeviceoutlet"
)]
pub struct ChromaCorePowercontroldeviceoutlet {
    pub id: i32,
    pub not_deleted: Option<bool>,
    pub identifier: String,
    pub has_power: Option<bool>,
    pub device_id: i32,
    pub host_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_powercontroltype"
)]
pub struct ChromaCorePowercontroltype {
    pub id: i32,
    pub not_deleted: Option<bool>,
    pub agent: String,
    pub make: Option<String>,
    pub model: Option<String>,
    pub max_outlets: i32,
    pub default_port: i32,
    pub default_username: Option<String>,
    pub default_password: Option<String>,
    pub default_options: String,
    pub poweron_template: String,
    pub powercycle_template: String,
    pub poweroff_template: String,
    pub monitor_template: String,
    pub outlet_query_template: String,
    pub outlet_list_template: Option<String>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_powercyclehostjob"
)]
pub struct ChromaCorePowercyclehostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_poweroffhostjob"
)]
pub struct ChromaCorePoweroffhostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_poweronhostjob"
)]
pub struct ChromaCorePoweronhostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_reboothostjob")]
pub struct ChromaCoreReboothostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_registertargetjob"
)]
pub struct ChromaCoreRegistertargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_registrationtoken"
)]
pub struct ChromaCoreRegistrationtoken {
    pub id: i32,
    pub expiry: DateTime<Utc>,
    pub cancelled: bool,
    pub secret: String,
    pub credits: i32,
    pub profile_id: Option<String>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removeconfiguredtargetjob"
)]
pub struct ChromaCoreRemoveconfiguredtargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removecopytooljob"
)]
pub struct ChromaCoreRemovecopytooljob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removefilesystemjob"
)]
pub struct ChromaCoreRemovefilesystemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_removehostjob")]
pub struct ChromaCoreRemovehostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removelustreclientjob"
)]
pub struct ChromaCoreRemovelustreclientjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lustre_client_mount_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removemanagedhostjob"
)]
pub struct ChromaCoreRemovemanagedhostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removeostpooljob"
)]
pub struct ChromaCoreRemoveostpooljob {
    pub job_ptr_id: i32,
    pub ost_id: i32,
    pub pool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removestratagemjob"
)]
pub struct ChromaCoreRemovestratagemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub stratagem_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removetargetjob"
)]
pub struct ChromaCoreRemovetargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removeunconfiguredcopytooljob"
)]
pub struct ChromaCoreRemoveunconfiguredcopytooljob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_removeunconfiguredhostjob"
)]
pub struct ChromaCoreRemoveunconfiguredhostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(repo_name))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_repo")]
pub struct ChromaCoreRepo {
    pub repo_name: String,
    pub location: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_runstratagemjob"
)]
pub struct ChromaCoreRunstratagemjob {
    pub job_ptr_id: i32,
    pub mdt_id: i32,
    pub uuid: String,
    pub report_duration: Option<i64>,
    pub purge_duration: Option<i64>,
    pub fqdn: String,
    pub target_name: String,
    pub filesystem_type: String,
    pub target_mount_point: String,
    pub device_path: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_sendstratagemresultstoclientjob"
)]
pub struct ChromaCoreSendstratagemresultstoclientjob {
    pub job_ptr_id: i32,
    pub uuid: String,
    pub report_duration: Option<i64>,
    pub purge_duration: Option<i64>,
    pub filesystem_id: i32,
}

#[cfg_attr(
    feature = "postgres-interop",
    derive(Queryable, Debug, Identifiable, Insertable, AsChangeset)
)]
#[derive(serde::Serialize, serde::Deserialize, Clone)]
#[cfg_attr(feature = "postgres-interop", primary_key(name))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_serverprofile")]
pub struct ChromaCoreServerprofile {
    pub name: String,
    pub ui_name: String,
    pub ui_description: String,
    pub managed: bool,
    pub worker: bool,
    pub user_selectable: bool,
    pub initial_state: String,
    pub ntp: bool,
    pub corosync: bool,
    pub corosync2: bool,
    pub pacemaker: bool,
    pub default: bool,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_serverprofile_repolist"
)]
pub struct ChromaCoreServerprofileRepolist {
    pub id: i32,
    pub serverprofile_id: String,
    pub repo_id: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_serverprofilepackage"
)]
pub struct ChromaCoreServerprofilepackage {
    pub id: i32,
    pub package_name: String,
    pub server_profile_id: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_serverprofilevalidation"
)]
pub struct ChromaCoreServerprofilevalidation {
    pub id: i32,
    pub test: String,
    pub description: String,
    pub server_profile_id: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_setuphostjob")]
pub struct ChromaCoreSetuphostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_object_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_setupmonitoredhostjob"
)]
pub struct ChromaCoreSetupmonitoredhostjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_object_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_setupworkerjob"
)]
pub struct ChromaCoreSetupworkerjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_object_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_shutdownhostjob"
)]
pub struct ChromaCoreShutdownhostjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startcopytooljob"
)]
pub struct ChromaCoreStartcopytooljob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startcorosync2job"
)]
pub struct ChromaCoreStartcorosync2job {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startcorosyncjob"
)]
pub struct ChromaCoreStartcorosyncjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_startlnetjob")]
pub struct ChromaCoreStartlnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startpacemakerjob"
)]
pub struct ChromaCoreStartpacemakerjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub pacemaker_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startstoppedfilesystemjob"
)]
pub struct ChromaCoreStartstoppedfilesystemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_starttargetjob"
)]
pub struct ChromaCoreStarttargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_startunavailablefilesystemjob"
)]
pub struct ChromaCoreStartunavailablefilesystemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_stepresult")]
pub struct ChromaCoreStepresult {
    pub id: i32,
    pub step_klass: String,
    pub args: String,
    pub step_index: i32,
    pub step_count: i32,
    pub log: String,
    pub console: String,
    pub backtrace: String,
    pub state: String,
    pub modified_at: DateTime<Utc>,
    pub created_at: DateTime<Utc>,
    pub result: Option<String>,
    pub job_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stopcopytooljob"
)]
pub struct ChromaCoreStopcopytooljob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub copytool_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stopcorosync2job"
)]
pub struct ChromaCoreStopcorosync2job {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stopcorosyncjob"
)]
pub struct ChromaCoreStopcorosyncjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_stoplnetjob")]
pub struct ChromaCoreStoplnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stoppacemakerjob"
)]
pub struct ChromaCoreStoppacemakerjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub pacemaker_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_stoptargetjob")]
pub struct ChromaCoreStoptargetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stopunavailablefilesystemjob"
)]
pub struct ChromaCoreStopunavailablefilesystemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storagealertpropagated"
)]
pub struct ChromaCoreStoragealertpropagated {
    pub id: i32,
    pub storage_resource_id: i32,
    pub alert_state_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storagepluginrecord"
)]
pub struct ChromaCoreStoragepluginrecord {
    pub id: i32,
    pub module_name: String,
    pub internal: bool,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourceattributereference"
)]
pub struct ChromaCoreStorageresourceattributereference {
    pub id: i32,
    pub key: String,
    pub resource_id: i32,
    pub value_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourceattributeserialized"
)]
pub struct ChromaCoreStorageresourceattributeserialized {
    pub id: i32,
    pub key: String,
    pub value: String,
    pub resource_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourceclass"
)]
pub struct ChromaCoreStorageresourceclas {
    pub id: i32,
    pub class_name: String,
    pub user_creatable: bool,
    pub storage_plugin_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourcerecord"
)]
pub struct ChromaCoreStorageresourcerecord {
    pub id: i32,
    pub storage_id_str: String,
    pub alias: Option<String>,
    pub resource_class_id: i32,
    pub storage_id_scope_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourcerecord_parents"
)]
pub struct ChromaCoreStorageresourcerecordParent {
    pub id: i32,
    pub from_storageresourcerecord_id: i32,
    pub to_storageresourcerecord_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_storageresourcerecord_reported_by"
)]
pub struct ChromaCoreStorageresourcerecordReportedBy {
    pub id: i32,
    pub from_storageresourcerecord_id: i32,
    pub to_storageresourcerecord_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_stratagemconfiguration"
)]
pub struct ChromaCoreStratagemconfiguration {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub interval: i64,
    pub report_duration: Option<i64>,
    pub purge_duration: Option<i64>,
    pub not_deleted: Option<bool>,
    pub filesystem_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_targetrecoveryinfo"
)]
pub struct ChromaCoreTargetrecoveryinfo {
    pub id: i32,
    pub recovery_status: String,
    pub target_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_task")]
pub struct ChromaCoreTask {
    pub id: i32,
    pub name: String,
    pub start: DateTime<Utc>,
    pub finish: Option<DateTime<Utc>>,
    pub state: String,
    pub fids_total: i64,
    pub fids_completed: i64,
    pub fids_failed: i64,
    pub data_transfered: i64,
    pub single_runner: bool,
    pub keep_failed: bool,
    pub actions: Vec<String>,
    pub args: serde_json::Value,
    pub filesystem_id: i32,
    pub running_on_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_testhostconnectionjob"
)]
pub struct ChromaCoreTesthostconnectionjob {
    pub job_ptr_id: i32,
    pub address: String,
    pub credentials_key: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_ticket")]
pub struct ChromaCoreTicket {
    pub id: i32,
    pub state_modified_at: DateTime<Utc>,
    pub state: String,
    pub immutable_state: bool,
    pub ha_label: Option<String>,
    pub name: String,
    pub resource_controlled: bool,
    pub not_deleted: Option<bool>,
    pub content_type_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_triggerpluginupdatesjob"
)]
pub struct ChromaCoreTriggerpluginupdatesjob {
    pub job_ptr_id: i32,
    pub host_ids: String,
    pub plugin_names_json: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurecorosync2job"
)]
pub struct ChromaCoreUnconfigurecorosync2job {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurecorosyncjob"
)]
pub struct ChromaCoreUnconfigurecorosyncjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub corosync_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurelnetjob"
)]
pub struct ChromaCoreUnconfigurelnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub target_object_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurentpjob"
)]
pub struct ChromaCoreUnconfigurentpjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub ntp_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurepacemakerjob"
)]
pub struct ChromaCoreUnconfigurepacemakerjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub pacemaker_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unconfigurestratagemjob"
)]
pub struct ChromaCoreUnconfigurestratagemjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub stratagem_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_unloadlnetjob")]
pub struct ChromaCoreUnloadlnetjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lnet_configuration_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unmountlustreclientmountjob"
)]
pub struct ChromaCoreUnmountlustreclientmountjob {
    pub job_ptr_id: i32,
    pub old_state: String,
    pub lustre_client_mount_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_unmountlustrefilesystemsjob"
)]
pub struct ChromaCoreUnmountlustrefilesystemsjob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_updatedevicesjob"
)]
pub struct ChromaCoreUpdatedevicesjob {
    pub job_ptr_id: i32,
    pub host_ids: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_updatejob")]
pub struct ChromaCoreUpdatejob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_updatenidsjob")]
pub struct ChromaCoreUpdatenidsjob {
    pub job_ptr_id: i32,
    pub host_ids: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(job_ptr_id))]
#[cfg_attr(
    feature = "postgres-interop",
    table_name = "chroma_core_updateyumfilejob"
)]
pub struct ChromaCoreUpdateyumfilejob {
    pub job_ptr_id: i32,
    pub host_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_volume")]
pub struct ChromaCoreVolume {
    pub id: i32,
    pub size: Option<i64>,
    pub label: String,
    pub filesystem_type: Option<String>,
    pub usable_for_lustre: bool,
    pub not_deleted: Option<bool>,
    pub storage_resource_id: Option<i32>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "chroma_core_volumenode")]
pub struct ChromaCoreVolumenode {
    pub id: i32,
    pub path: String,
    pub primary: bool,
    pub use_: bool,
    pub not_deleted: Option<bool>,
    pub host_id: i32,
    pub storage_resource_id: Option<i32>,
    pub volume_id: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "django_content_type")]
pub struct DjangoContentType {
    pub id: i32,
    pub app_label: String,
    pub model: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "django_migrations")]
pub struct DjangoMigration {
    pub id: i32,
    pub app: String,
    pub name: String,
    pub applied: DateTime<Utc>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", primary_key(session_key))]
#[cfg_attr(feature = "postgres-interop", table_name = "django_session")]
pub struct DjangoSession {
    pub session_key: String,
    pub session_data: String,
    pub expire_date: DateTime<Utc>,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "django_site")]
pub struct DjangoSite {
    pub id: i32,
    pub domain: String,
    pub name: String,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "tastypie_apiaccess")]
pub struct TastypieApiacces {
    pub id: i32,
    pub identifier: String,
    pub url: String,
    pub request_method: String,
    pub accessed: i32,
}

#[cfg_attr(feature = "postgres-interop", derive(Queryable, Debug, Identifiable))]
#[derive(serde::Serialize, serde::Deserialize)]
#[cfg_attr(feature = "postgres-interop", table_name = "tastypie_apikey")]
pub struct TastypieApikey {
    pub id: i32,
    pub key: String,
    pub created: DateTime<Utc>,
    pub user_id: i32,
}
