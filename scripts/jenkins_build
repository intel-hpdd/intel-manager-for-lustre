#!/bin/bash
#
# This script should be used instead of configuring build logic in
# Jenkins job configurations.
#
# 2013-03-27, mjmac, first implementation, handles chroma-reviews
# 2013-06-12, mjmac, scrub chroma-bundles/*.tar.gz before build

set -x # enable xtrace
set -u # undefined variables are errors
set -e # errors are fatal

run_repo_maintenance()
{
    # This shouldn't cost much to run every time, but if it winds up being
    # a burden, we could try to randomize it or make it go every N runs.
    git gc
}

clean_uncommitted_artifacts()
{
    local EXCLUDES=". .git dist include"
    for subdir in $(find . -maxdepth 1 -type d); do
        dirname=$(basename $subdir)
        if [[ $EXCLUDES == *$dirname* ]]; then continue; fi
        # hacks
        if [ $dirname == 'chroma-manager' ]; then
            # it would be better to move myenv somewhere outside of this
            # directory
            local MANAGER_EXCLUDES="chroma-manager/myenv/"
            for cruft in $(git status --porcelain $dirname | awk '/^(!!|\?\?)/ {print $2}'); do
                if [[ $MANAGER_EXCLUDES == *$cruft* ]]; then continue; fi
                rm -fr $cruft
            done

            # Remove ignored files.
            git clean -ndX $dirname | awk '{print $3}' | xargs -r rm -rf
        else
            git clean -dfx $subdir
        fi
    done
}

run_pre_commit_hook()
{
    scripts/pre-commit --all-files --exclude myenv
}

pre_build()
{
    run_repo_maintenance
    clean_uncommitted_artifacts
    make clean_substs
    # Nuke these tarballs to deal with name changes
    rm -f chroma-bundles/*.tar.gz
    # FIXME: There are many unaddressed 
    # issues in this repo exposed by 
    # this precommit hook. They need to be
    # fixed at some point.
    # run_pre_commit_hook
}

build()
{
    export CACHE=/mnt/builder_cache/
    make rpms
}

create_repository()
{
    pushd _topdir/RPMS/noarch/
    createrepo --pretty .
    popd
}

post_build()
{
    create_repository
}

pre_build
build
post_build
